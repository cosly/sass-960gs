@import 'variables';

@mixin fluid-grid-container {
  margin-left: $ninesixty-fluid-grid-margin;
  margin-right: $ninesixty-fluid-grid-margin;
  width: $ninesixty-fluid-grid-width;
  min-width: $ninesixty-fluid-grid-min-width;
}

@mixin fluid-grid-width($n, $cols: $ninesixty-columns,
                        $gutter-width: $ninesixty-fluid-gutter-width) {
  width: 100% / $cols * $n - $gutter-width;
}

@mixin fluid-grid-unit-base($gutter-width: $ninesixty-fluid-gutter-width) {
  display: inline;
  float: left;
  margin: {
    left: $gutter-width / 2;
    right: $gutter-width / 2;
  };
}

@mixin fluid-grid($n, $cols: $ninesixty-columns,
                  $gutter-width: $ninesixty-fluid-gutter-width) {
  @include fluid-grid-unit-base($gutter-width);
  @include fluid-grid-width($n, $cols, $gutter-width);
}

@mixin alpha {
  margin-left: 0;
}

@mixin omega {
  margin-right: 0;
}

@mixin fluid-grids($cols: $ninesixty-columns,
                   $gutter-width: $ninesixty-fluid-gutter-width) {
  #{enumerate(".fluid" + $ninesixty-class-separator + "grid", 1,
              $cols, $ninesixty-class-separator)} {
    @include fluid-grid-unit-base($gutter-width);
  }
  @for $n from 1 through $cols {
    .fluid#{$ninesixty-class-separator}grid#{$ninesixty-class-separator}#{$n} {
      @include fluid-grid-width($n, $cols, $gutter-width);
    }
  }
}

@mixin fluid-grid-prefix($n, $cols: $ninesixty-columns) {
  padding-left: $ninesixty-fluid-grid-width / $cols * $n;
}

@mixin fluid-grid-prefixes($cols: $ninesixty-columns) {
  @for $n from 1 through $cols - 1 {
    .prefix#{$ninesixty-class-separator}#{$n} {
      @include fluid-grid-prefix($n, $cols);
    }
  }
}

@mixin fluid-grid-suffix($n, $cols: $ninesixty-columns) {
  padding-right: $ninesixty-fluid-grid-width / $cols * $n;
}

@mixin fluid-grid-suffixes($cols: $ninesixty-columns) {
  @for $n from 1 through $cols - 1 {
    .suffix#{$ninesixty-class-separator}#{$n} {
      @include fluid-grid-suffix($n, $cols);
    }
  }
}

@mixin fluid-grid-children {
  .alpha {
    @include alpha;
  }
  .omega {
    @include omega;
  }
}

@mixin fluid-grid-move-base {
  position: relative;
}

@mixin fluid-grid-move-push($n, $cols) {
  left: $ninesixty-fluid-grid-width / $cols * $n;
}

@mixin fluid-grid-move-pull($n, $cols) {
  left: -($ninesixty-fluid-grid-width / $cols) * $n;
}

@mixin fluid-grid-push($n, $cols: $ninesixty-columns) {
  @include fluid-grid-move-base;
  @include fluid-grid-move-push($n, $cols);
}

@mixin fluid-grid-pull($n, $cols: $ninesixty-columns) {
  @include fluid-grid-move-base;
  @include fluid-grid-move-pull($n, $cols);
}

@mixin fluid-grid-movements($cols: $ninesixty-columns) {
  #{enumerate(".push", 1, $cols - 1, $ninesixty-class-separator)},
  #{enumerate(".pull", 1, $cols - 1, $ninesixty-class-separator)} {
    @include fluid-grid-move-base;
  }
  @for $n from 1 through $cols - 1 {
    .push#{$ninesixty-class-separator}#{$n} {
      @include fluid-grid-move-push($n, $cols);
    }
    .pull#{$ninesixty-class-separator}#{$n} {
      @include fluid-grid-move-pull($n, $cols);
    }
  }
}

@mixin fluid-grid-system($cols: $ninesixty-columns) {
  @include fluid-grid-container;
  @include fluid-grids($cols);
  @include fluid-grid-prefixes($cols);
  @include fluid-grid-suffixes($cols);
  @include fluid-grid-children;
  @include fluid-grid-movements($cols);
}

@mixin fluid-grid-system-complete($cols: $ninesixty-columns) {
  .fluid#{$ninesixty-class-separator}container#{$ninesixty-class-separator}#{$cols} {
    @include fluid-grid-system($cols);
  }
}
